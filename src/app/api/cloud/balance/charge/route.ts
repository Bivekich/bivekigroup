import { NextResponse } from 'next/server';
import { db } from '@/lib/db';
import { sendTelegramMessage } from '@/lib/telegram';

export async function POST() {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏
    const activeServices = await db.query(
      `SELECT cs.*, u.email, u.balance
       FROM cloud_services cs
       JOIN users u ON cs.user_id = u.id
       WHERE cs.status = 'active'`
    );

    for (const service of activeServices.rows) {
      const { user_id, price, email, balance } = service;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤
      if (balance < price) {
        // –ï—Å–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Å–ª—É–≥—É
        await db.query('UPDATE cloud_services SET status = $1 WHERE id = $2', [
          'suspended',
          service.id,
        ]);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        await sendTelegramMessage(
          `‚ùå –£—Å–ª—É–≥–∞ ${service.name} –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞\n–ö–ª–∏–µ–Ω—Ç: ${email}\n–ü—Ä–∏—á–∏–Ω–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤`
        );

        continue;
      }

      // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞
      const newBalance = balance - price;
      await db.query('UPDATE users SET balance = $1 WHERE id = $2', [
        newBalance,
        user_id,
      ]);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–ø–∏—Å–∞–Ω–∏–∏
      await sendTelegramMessage(
        `üí∞ –°–ø–∏—Å–∞–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤\n–ö–ª–∏–µ–Ω—Ç: ${email}\n–£—Å–ª—É–≥–∞: ${service.name}\n–°—É–º–º–∞: ${price} ‚ÇΩ\n–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${newBalance} ‚ÇΩ`
      );
    }

    return NextResponse.json({ success: true });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤:', error);
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤' },
      { status: 500 }
    );
  }
}
